#!/usr/bin/bash

sudo apt update
sudo apt install -y zsh bat bc fasd tmux lsd fzf python3 python3-pip python3-virtualenv python3.11-venv nodejs npm
sudo snap install --beta nvim --classic
python3 -m virtualenv .nvim-venv
.nvim-venv/bin/pip install pynvim

LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
tar xf lazygit.tar.gz lazygit
sudo install lazygit /usr/local/bin

GO_VERSION=$(curl -s "https://go.dev/VERSION?m=text" | head -1)
wget "https://dl.google.com/go/${GO_VERSION}.linux-amd64.tar.gz"
sudo tar -C /usr/local -xzf "${GO_VERSION}.linux-amd64.tar.gz"
rm "${GO_VERSION}.linux-amd64.tar.gz"

go install github.com/x-motemen/ghq@latest

#--------------------------------------------------
# Shell Configurations
#--------------------------------------------------
OS="$(uname)"
if [[ "$OS" == "Linux" ]] || [[ "$OS" == "Darwin" ]] ; then
    echo
    if [[ "$OS" == "Linux" ]]; then
        echo "--> Please, type your password (to 'sudo apt install' the requirements):"
        # sudo apt install zsh bat git snap -y
        sudo apt install zsh -y
        echo -e "\nInstalling zsh, bat, git and snap"
    fi

    echo -e "\nShell Configurations"
    CURRENT_SHELL=$(getent passwd $(whoami) | cut -d: -f7)
    ROOT_SHELL=$(getent passwd root | cut -d: -f7)
    ZSH_PATH=$(which zsh)

    if [ "$CURRENT_SHELL" != "$ZSH_PATH" ]; then
        sudo usermod -s "$ZSH_PATH" $(whoami) &> /dev/null
        echo "Default shell changed to zsh for $(whoami). You may need to log out and log back in."
    fi

    if [ "$ROOT_SHELL" != "$ZSH_PATH" ]; then
        sudo usermod -s "$ZSH_PATH" root &> /dev/null
        echo "Default shell changed to zsh for root. You may need to log out and log back in."
    fi

    # if mv -n ~/.zshrc ~/.zshrc_backup_$(date +"%Y-%m-%d_%H:%M:%S") &> /dev/null; then
    #     echo -e "\n--> Backing up the current .zshrc config to .zshrc_backup-date"
    # fi

    # Install Prezto
    if [ ! -d "${ZDOTDIR:-$HOME}/.zprezto" ]; then
        git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
        echo "Prezto cloned successfully."
    else
        echo "Prezto is already installed."
    fi
    for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/*; do
        # Exclude README.md
        if [[ "$(basename "$rcfile")" != "README.md" ]]; then
            ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.$(basename "$rcfile")"
        fi
    done

    echo -e "\nPrezto configuration complete"

  # Install zplug
  ZPLUG_HOME="$HOME/.zplug"
  if [ ! -d "$ZPLUG_HOME" ]; then
      echo "Installing zplug..."
      git clone https://github.com/zplug/zplug $ZPLUG_HOME
      # Note that you can't source zplug here since this script runs in bash
      # You will need to source it from your .zshrc file
  else
      echo "zplug is already installed."
  fi

else
    echo "This script is only supported on macOS and Linux."
    exit 0
fi
